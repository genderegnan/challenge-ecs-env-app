name: AWS example workflow
on:
  push:
    branches:
      - testing
      - develop

permissions:
  id-token: write 
  contents: read    
jobs:
  Callenge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: "${{ github.event.repository.name }}"
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR BO
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create Registry Repo BO (if not exists)
        run: aws ecr create-repository --repository-name ${{ github.event.repository.name }} || true

      - name: Build & Push Release Image
        uses: docker/build-push-action@v3
        with:
          no-cache: true
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest

      - name: Build & Push Release Image
        uses: docker/build-push-action@v3
        with:
          no-cache: true
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
    
      - name: Deploy to ECS
        env:
         AWS_REGION: ${{ secrets.AWS_REGION }}
         IMAGE_URL: ${{ steps.login-ecr.outputs.registry }}/${{ github.event.repository.name }}:latest
         ENVIRONMENT_NAME: ${{ github.ref_name }}
        run: |
         cd terraform
         terraform init
         terraform apply -auto-approve 
         
#-var "environment_name=$ENVIRONMENT_NAME"
